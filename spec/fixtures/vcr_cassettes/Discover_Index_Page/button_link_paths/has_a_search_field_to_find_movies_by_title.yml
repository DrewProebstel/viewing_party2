---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/search/movie?api_key=<movie_api_key>&query=Shaw
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 08 Jul 2022 00:27:04 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 1e5c934b70471a41d2b61ae8c4abeb78.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - aZEicoWpO8xDu9kErI5bhxcoeNMAo65J4IVDgPacUgKhE8SsBIlqXA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 08 Jul 2022 00:27:04 GMT
recorded_with: VCR 6.1.0
